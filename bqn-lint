#!/usr/bin/env bqn

c  ⇐ •Import "../bqn-color/color.bqn"
s  ⇐ •Import "../bqn-code/lib/string.bqn"
fs ⇐ •Import "../bqn-code/lib/file_system.bqn"
fn ⇐ •Import "../bqn-code/lib/fun.bqn"

nl     ← @+10
colors ← c.Green‿c.Yellow‿c.Red

title ← {
    a ← "↑↑↑" # arrows
    nl∾(∾colors{𝕎𝕩}¨a)∾c.Green " bqn-test "∾(∾colors{𝕎𝕩}¨○⌽a)∾nl
}

replacements ← ⟨⟨"0≠≠", "×≠"⟩⟩ # TODO add more

CheckReplacement ← { f‿(t‿r)𝕊i‿l:
    m ← t⍷l
    { ¬∨´m ? "" ; 
        •Out "In "∾f∾":"
        •Out "  Line "∾(•Fmt i)∾":"
        •Out "    "∾(c.Red t) s.Join t s.Split l
        •Out "    "∾ c.Yellow " ↑"⊏˜t fn.FindFull l
        •Out "    "∾(" "/˜⊑/m)∾(c.Yellow "this can be: ")∾c.Green r
        •Out ⟨⟩
    }
}

LintSingleFile ← { 𝕊file:
    l ← •file.Lines 𝕩
    {(file⋈𝕩)⊸CheckReplacement¨(↕∘≠⊸(⋈¨)l)}¨replacements
}

main ← {
    •Out title
    (c.Red "Must provide directory (`pwd` for current)") ! 0≠≠•args
    d ← 0⊑•args  # directory
    f ← fs.ListRecursiveBQNFiles d
    LintSingleFile¨f
}

main